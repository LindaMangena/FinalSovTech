{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\React-Waste_Management-website-main\\\\react-lunga_app\\\\src\\\\components\\\\Navbar\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { AiOutlineQrcode } from \"react-icons/ai\";\nimport gatsbyIcon from \"../../images/icon2.png\";\nimport \"../Footer/\";\nimport { Nav, NavbarContainer, NavLogo, MobileIcon, NavMenu, NavItem, NavLinks, NavBtn, NavBtnLink } from './NavbarElements';\nimport { IconContext } from 'react-icons/lib';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Navbar = _ref => {\n  _s();\n\n  let {\n    toggle\n  } = _ref;\n  const [scrollNav, setScrollNav] = useState(false);\n\n  const changeNav = () => {\n    if (window.scrollY >= 80) {\n      setScrollNav(true);\n    } else {\n      setScrollNav(false);\n    }\n  }; //Just to make sure this thing doesn't go crazy    \n\n\n  useEffect(() => {\n    window.addEventListener('scroll', changeNav);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n      value: {\n        color: '#01BF71'\n      },\n      children: /*#__PURE__*/_jsxDEV(Nav, {\n        scrollNav: scrollNav,\n        children: /*#__PURE__*/_jsxDEV(NavbarContainer, {\n          children: [/*#__PURE__*/_jsxDEV(NavMenu, {\n            children: [/*#__PURE__*/_jsxDEV(NavItem, {\n              children: /*#__PURE__*/_jsxDEV(NavLinks, {\n                to: \"discover\",\n                children: \"About\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n              children: /*#__PURE__*/_jsxDEV(NavLinks, {\n                to: \"about\",\n                children: \"Discover\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n              children: /*#__PURE__*/_jsxDEV(NavLinks, {\n                to: \"services\",\n                children: \"Services\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n              children: /*#__PURE__*/_jsxDEV(NavLinks, {\n                to: \"services\",\n                children: \"Services\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(NavBtn, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Navbar, \"eaUcF+T16QTGbajlwzqOoSnbGek=\");\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/React-Waste_Management-website-main/react-lunga_app/src/components/Navbar/index.js"],"names":["React","useState","useEffect","AiOutlineQrcode","gatsbyIcon","Nav","NavbarContainer","NavLogo","MobileIcon","NavMenu","NavItem","NavLinks","NavBtn","NavBtnLink","IconContext","Navbar","toggle","scrollNav","setScrollNav","changeNav","window","scrollY","addEventListener","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAO,YAAP;AACA,SACIC,GADJ,EAEIC,eAFJ,EAGIC,OAHJ,EAIIC,UAJJ,EAKIC,OALJ,EAMIC,OANJ,EAOIC,QAPJ,EAQIC,MARJ,EASIC,UATJ,QAUO,kBAVP;AAWA,SAAQC,WAAR,QAA0B,iBAA1B;;;;AAGA,MAAMC,MAAM,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAAEC,IAAAA;AAAF,GAAe;AAC3B,QAAK,CAACC,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,KAAD,CAAzC;;AAEA,QAAMkB,SAAS,GAAG,MAAK;AACnB,QAAGC,MAAM,CAACC,OAAP,IAAkB,EAArB,EAAyB;AACrBH,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,KAFD,MAEM;AACFA,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,GAND,CAH2B,CAW/B;;;AACAhB,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkCH,SAAlC;AACH,GAFQ,EAEN,EAFM,CAAT;AAII,sBACI;AAAA,2BACA,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAAEI,QAAAA,KAAK,EAAE;AAAT,OAA7B;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,SAAS,EAAEN,SAAhB;AAAA,+BACI,QAAC,eAAD;AAAA,kCAEG,QAAC,OAAD;AAAA,oCACA,QAAC,OAAD;AAAA,qCACQ,QAAC,QAAD;AAAU,gBAAA,EAAE,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,oBADA,eAII,QAAC,OAAD;AAAA,qCACI,QAAC,QAAD;AAAU,gBAAA,EAAE,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAOK,QAAC,OAAD;AAAA,qCACG,QAAC,QAAD;AAAU,gBAAA,EAAE,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,oBAPL,eAUK,QAAC,OAAD;AAAA,qCACG,QAAC,QAAD;AAAU,gBAAA,EAAE,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,oBAVL;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFH,eAiBG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,kBAjBH;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AA6BH,CA7CD;;GAAMF,M;;KAAAA,M;AA+CN,eAAeA,MAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { AiOutlineQrcode } from \"react-icons/ai\";\nimport gatsbyIcon from \"../../images/icon2.png\";\nimport \"../Footer/\"\nimport{\n    Nav, \n    NavbarContainer, \n    NavLogo, \n    MobileIcon, \n    NavMenu, \n    NavItem, \n    NavLinks,\n    NavBtn,\n    NavBtnLink,\n} from './NavbarElements'\nimport {IconContext} from 'react-icons/lib'\n\n\nconst Navbar = ({ toggle }) => {\n    const[scrollNav, setScrollNav] = useState(false); \n    \n    const changeNav = ()=> {\n        if(window.scrollY >= 80) {\n            setScrollNav(true)\n        }else {\n            setScrollNav(false)\n        }\n    };\n\n//Just to make sure this thing doesn't go crazy    \nuseEffect(() => {\n    window.addEventListener('scroll', changeNav)\n}, []);\n\n    return (\n        <>\n        <IconContext.Provider value={{ color: '#01BF71'}}>\n            <Nav scrollNav={scrollNav}>\n                <NavbarContainer>\n                   \n                   <NavMenu>\n                   <NavItem>\n                           <NavLinks to='discover'>About</NavLinks>\n                        </NavItem>\n                       <NavItem>\n                           <NavLinks to='about'>Discover</NavLinks>\n                        </NavItem>\n                        <NavItem>\n                           <NavLinks to='services'>Services</NavLinks>\n                        </NavItem>\n                        <NavItem>\n                           <NavLinks to='services'>Services</NavLinks>\n                        </NavItem>\n                        \n                   </NavMenu>\n                   <NavBtn>\n                     {/* <NavBtnLink to=\"/foot\">Talk To Us</NavBtnLink>   */}\n                   </NavBtn>\n                </NavbarContainer>\n            </Nav>\n            </IconContext.Provider>\n        </>\n    );\n};\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}